PinkBlack :: args : {'gpu': 0, 'batch_size': 12, 'train_signal': '/home/azureuser/env/utils/radio/clean/', 'train_noise': '/home/azureuser/env/utils/radio/noise/', 'test_signal': '/home/azureuser/env/utils/radio/valclean', 'test_noise': '/home/azureuser/env/utils/radio/valnoise/', 'sequence_length': 16384, 'num_step': 5000, 'validation_interval': 500, 'num_workers': 0, 'ckpt': '/home/azureuser/env/DeepComplexUNetPyTorch/to/save/checkpoint.pth', 'model_complexity': 45, 'lr': 0.01, 'num_signal': 0, 'num_noise': 0, 'optimizer': 'adam', 'lr_decay': 0.5, 'momentum': 0, 'multi_gpu': False, 'complex': True, 'model_depth': 20, 'swa': False, 'loss': 'wsdr', 'log_amp': False, 'metric': 'pesq', 'train_dataset': 'se', 'valid_dataset': 'se', 'preload': False, 'padding_mode': 'reflect'}
Got 14086 signals and 14086 mixtures.
Got 1781 signals and 1781 mixtures.
SourceSeparator(
  (net): Sequential(
    (0): STFT(
      (stft): STFT(fft_length=1024, hop_length=256, win_length=None)(center=True, pad_mode=reflect, normalized=False, onesided=True)
      (amp2db): AmplitudeToDb(ref=1.0, amin=1e-07)
    )
    (1): UNet(
      (encoder0): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(1, 31, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
          (conv_im): Conv2d(1, 31, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder1): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(31, 31, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
          (conv_im): Conv2d(31, 31, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder2): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(31, 62, kernel_size=(6, 4), stride=(2, 2), padding=[2, 1])
          (conv_im): Conv2d(31, 62, kernel_size=(6, 4), stride=(2, 2), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder3): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 62, kernel_size=(7, 5), stride=(2, 1), padding=[3, 2])
          (conv_im): Conv2d(62, 62, kernel_size=(7, 5), stride=(2, 1), padding=[3, 2])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder4): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
          (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder5): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
          (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder6): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
          (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder7): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
          (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder8): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
          (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (encoder9): Encoder(
        (conv): ComplexConv2d(
          (conv_re): Conv2d(62, 128, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
          (conv_im): Conv2d(62, 128, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder0): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(128, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
          (tconv_im): ConvTranspose2d(128, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder1): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder2): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder3): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder4): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder5): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder6): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(6, 3), stride=(2, 1), padding=(2, 1))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(6, 3), stride=(2, 1), padding=(2, 1))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder7): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(124, 62, kernel_size=(7, 5), stride=(2, 2), padding=(2, 1))
          (tconv_im): ConvTranspose2d(124, 62, kernel_size=(7, 5), stride=(2, 2), padding=(2, 1))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder8): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(93, 62, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
          (tconv_im): ConvTranspose2d(93, 62, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (decoder9): Decoder(
        (transconv): ComplexConvTranspose2d(
          (tconv_re): ConvTranspose2d(93, 62, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
          (tconv_im): ConvTranspose2d(93, 62, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
        )
        (bn): ComplexBatchNorm2d(
          (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): LeakyReLU(negative_slope=0.01, inplace)
      )
      (linear): ComplexConv2d(
        (conv_re): Conv2d(62, 1, kernel_size=(1, 1), stride=(1, 1))
        (conv_im): Conv2d(62, 1, kernel_size=(1, 1), stride=(1, 1))
      )
      (decoders): ModuleList(
        (0): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(128, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
            (tconv_im): ConvTranspose2d(128, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (1): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (2): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (3): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (4): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 3), stride=(2, 1), padding=(1, 1))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (5): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(4, 2), stride=(2, 2), padding=(1, 0))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (6): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(6, 3), stride=(2, 1), padding=(2, 1))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(6, 3), stride=(2, 1), padding=(2, 1))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (7): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(124, 62, kernel_size=(7, 5), stride=(2, 2), padding=(2, 1))
            (tconv_im): ConvTranspose2d(124, 62, kernel_size=(7, 5), stride=(2, 2), padding=(2, 1))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (8): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(93, 62, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
            (tconv_im): ConvTranspose2d(93, 62, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (9): Decoder(
          (transconv): ComplexConvTranspose2d(
            (tconv_re): ConvTranspose2d(93, 62, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
            (tconv_im): ConvTranspose2d(93, 62, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
      )
      (encoders): ModuleList(
        (0): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(1, 31, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
            (conv_im): Conv2d(1, 31, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (1): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(31, 31, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
            (conv_im): Conv2d(31, 31, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (2): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(31, 62, kernel_size=(6, 4), stride=(2, 2), padding=[2, 1])
            (conv_im): Conv2d(31, 62, kernel_size=(6, 4), stride=(2, 2), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (3): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 62, kernel_size=(7, 5), stride=(2, 1), padding=[3, 2])
            (conv_im): Conv2d(62, 62, kernel_size=(7, 5), stride=(2, 1), padding=[3, 2])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (4): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
            (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (5): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
            (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (6): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
            (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (7): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
            (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (8): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
            (conv_im): Conv2d(62, 62, kernel_size=(5, 3), stride=(2, 2), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
        (9): Encoder(
          (conv): ComplexConv2d(
            (conv_re): Conv2d(62, 128, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
            (conv_im): Conv2d(62, 128, kernel_size=(5, 3), stride=(2, 1), padding=[2, 1])
          )
          (bn): ComplexBatchNorm2d(
            (bn_re): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (bn_im): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (relu): LeakyReLU(negative_slope=0.01, inplace)
        )
      )
    )
    (2): ApplyMask(
      (amp2db): DbToAmplitude(ref=1.0)
    )
    (3): ISTFT(
      (amp2db): DbToAmplitude(ref=1.0)
    )
  )
)
|---------------------|---------------------|---------------------|---------------------|---------------------|---------------------|---------------------|
|         step        |      train_loss     |     train_metric    |       val_loss      |      val_metric     |          lr         |         time        |
|---------------------|---------------------|---------------------|---------------------|---------------------|---------------------|---------------------|
  0%|          | 0/500 [00:00<?, ?it/s]  0%|          | 1/500 [00:03<29:09,  3.51s/it]  0%|          | 2/500 [00:06<28:49,  3.47s/it]  1%|          | 3/500 [00:10<28:31,  3.44s/it]/home/azureuser/anaconda3/envs/coco/lib/python3.6/site-packages/pypesq/__init__.py:53: UserWarning: Processing Error! return NaN
  warnings.warn('Processing Error! return NaN')
  1%|          | 4/500 [00:13<28:18,  3.42s/it]  1%|1         | 5/500 [00:17<28:15,  3.43s/it]  1%|1         | 6/500 [00:20<28:07,  3.42s/it]  1%|1         | 7/500 [00:23<27:57,  3.40s/it]  2%|1         | 8/500 [00:27<27:56,  3.41s/it]  2%|1         | 9/500 [00:30<27:45,  3.39s/it]  2%|2         | 10/500 [00:33<27:36,  3.38s/it]  2%|2         | 11/500 [00:37<27:35,  3.39s/it]  2%|2         | 12/500 [00:40<27:33,  3.39s/it]  3%|2         | 13/500 [00:44<27:25,  3.38s/it]  3%|2         | 14/500 [00:47<27:28,  3.39s/it]  3%|3         | 15/500 [00:50<27:21,  3.39s/it]  3%|3         | 16/500 [00:54<27:22,  3.39s/it]  3%|3         | 17/500 [00:57<27:19,  3.39s/it]  4%|3         | 18/500 [01:01<27:12,  3.39s/it]  4%|3         | 19/500 [01:04<27:08,  3.39s/it]  4%|4         | 20/500 [01:07<27:08,  3.39s/it]  4%|4         | 21/500 [01:11<26:58,  3.38s/it]  4%|4         | 22/500 [01:14<26:55,  3.38s/it]  5%|4         | 23/500 [01:18<26:59,  3.39s/it]  5%|4         | 24/500 [01:21<26:55,  3.39s/it]  5%|5         | 25/500 [01:24<26:53,  3.40s/it]  5%|5         | 26/500 [01:28<26:51,  3.40s/it]  5%|5         | 27/500 [01:31<26:47,  3.40s/it]  6%|5         | 28/500 [01:35<26:43,  3.40s/it]  6%|5         | 29/500 [01:38<26:42,  3.40s/it]  6%|6         | 30/500 [01:41<26:39,  3.40s/it]  6%|6         | 31/500 [01:45<26:32,  3.40s/it]  6%|6         | 32/500 [01:48<26:27,  3.39s/it]  7%|6         | 33/500 [01:51<26:21,  3.39s/it]  7%|6         | 34/500 [01:55<26:21,  3.39s/it]  7%|7         | 35/500 [01:58<26:20,  3.40s/it]  7%|7         | 36/500 [02:02<26:16,  3.40s/it]  7%|7         | 37/500 [02:05<26:10,  3.39s/it]  8%|7         | 38/500 [02:09<26:11,  3.40s/it]  8%|7         | 39/500 [02:12<26:11,  3.41s/it]  8%|8         | 40/500 [02:15<26:06,  3.41s/it]  8%|8         | 41/500 [02:19<26:03,  3.41s/it]  8%|8         | 42/500 [02:22<25:52,  3.39s/it]  9%|8         | 43/500 [02:25<25:49,  3.39s/it]  9%|8         | 44/500 [02:29<25:50,  3.40s/it]  9%|9         | 45/500 [02:32<25:47,  3.40s/it]  9%|9         | 46/500 [02:36<25:43,  3.40s/it]  9%|9         | 47/500 [02:39<25:45,  3.41s/it] 10%|9         | 48/500 [02:43<25:37,  3.40s/it] 10%|9         | 49/500 [02:46<25:35,  3.40s/it] 10%|#         | 50/500 [02:49<25:29,  3.40s/it] 10%|#         | 51/500 [02:53<25:26,  3.40s/it] 10%|#         | 52/500 [02:56<25:28,  3.41s/it] 11%|#         | 53/500 [03:00<25:23,  3.41s/it] 11%|#         | 54/500 [03:03<25:21,  3.41s/it] 11%|#1        | 55/500 [03:06<25:19,  3.41s/it] 11%|#1        | 56/500 [03:10<25:19,  3.42s/it] 11%|#1        | 57/500 [03:13<25:17,  3.42s/it] 12%|#1        | 58/500 [03:17<25:14,  3.43s/it] 12%|#1        | 59/500 [03:20<25:05,  3.41s/it] 12%|#2        | 60/500 [03:24<25:08,  3.43s/it] 12%|#2        | 61/500 [03:27<25:02,  3.42s/it] 12%|#2        | 62/500 [03:30<24:57,  3.42s/it] 13%|#2        | 63/500 [03:34<24:51,  3.41s/it] 13%|#2        | 64/500 [03:37<24:46,  3.41s/it] 13%|#3        | 65/500 [03:41<24:47,  3.42s/it] 13%|#3        | 66/500 [03:44<24:41,  3.41s/it] 13%|#3        | 67/500 [03:47<24:35,  3.41s/it] 14%|#3        | 68/500 [03:51<24:33,  3.41s/it] 14%|#3        | 69/500 [03:54<24:26,  3.40s/it] 14%|#4        | 70/500 [03:58<24:24,  3.41s/it] 14%|#4        | 71/500 [04:01<24:25,  3.42s/it] 14%|#4        | 72/500 [04:04<24:20,  3.41s/it] 15%|#4        | 73/500 [04:08<24:19,  3.42s/it] 15%|#4        | 74/500 [04:11<24:14,  3.42s/it] 15%|#5        | 75/500 [04:15<24:13,  3.42s/it] 15%|#5        | 76/500 [04:18<24:08,  3.42s/it] 15%|#5        | 77/500 [04:22<24:05,  3.42s/it] 16%|#5        | 78/500 [04:25<24:01,  3.42s/it] 16%|#5        | 79/500 [04:28<23:55,  3.41s/it] 16%|#6        | 80/500 [04:32<23:55,  3.42s/it] 16%|#6        | 81/500 [04:35<23:51,  3.42s/it] 16%|#6        | 82/500 [04:39<23:48,  3.42s/it] 17%|#6        | 83/500 [04:42<23:41,  3.41s/it] 17%|#6        | 84/500 [04:45<23:38,  3.41s/it] 17%|#7        | 85/500 [04:49<23:34,  3.41s/it] 17%|#7        | 86/500 [04:52<23:30,  3.41s/it] 17%|#7        | 87/500 [04:56<23:31,  3.42s/it] 18%|#7        | 88/500 [04:59<23:26,  3.41s/it] 18%|#7        | 89/500 [05:03<23:28,  3.43s/it] 18%|#8        | 90/500 [05:06<23:22,  3.42s/it] 18%|#8        | 91/500 [05:09<23:14,  3.41s/it] 18%|#8        | 92/500 [05:13<23:08,  3.40s/it] 19%|#8        | 93/500 [05:16<23:07,  3.41s/it] 19%|#8        | 94/500 [05:20<23:06,  3.41s/it] 19%|#9        | 95/500 [05:23<23:03,  3.42s/it] 19%|#9        | 96/500 [05:26<23:02,  3.42s/it] 19%|#9        | 97/500 [05:30<22:58,  3.42s/it] 20%|#9        | 98/500 [05:33<22:52,  3.41s/it] 20%|#9        | 99/500 [05:37<22:50,  3.42s/it] 20%|##        | 100/500 [05:40<22:50,  3.43s/it] 20%|##        | 101/500 [05:44<22:44,  3.42s/it] 20%|##        | 102/500 [05:47<22:43,  3.43s/it] 21%|##        | 103/500 [05:50<22:36,  3.42s/it] 21%|##        | 104/500 [05:54<22:30,  3.41s/it] 21%|##1       | 105/500 [05:57<22:27,  3.41s/it] 21%|##1       | 106/500 [06:01<22:24,  3.41s/it] 21%|##1       | 107/500 [06:04<22:18,  3.41s/it] 22%|##1       | 108/500 [06:07<22:18,  3.41s/it] 22%|##1       | 109/500 [06:11<22:15,  3.42s/it] 22%|##2       | 110/500 [06:14<22:09,  3.41s/it] 22%|##2       | 111/500 [06:18<22:06,  3.41s/it] 22%|##2       | 112/500 [06:21<22:03,  3.41s/it] 23%|##2       | 113/500 [06:24<22:00,  3.41s/it] 23%|##2       | 114/500 [06:28<21:56,  3.41s/it] 23%|##3       | 115/500 [06:31<21:54,  3.41s/it] 23%|##3       | 116/500 [06:35<21:49,  3.41s/it] 23%|##3       | 117/500 [06:38<21:45,  3.41s/it] 24%|##3       | 118/500 [06:42<21:43,  3.41s/it] 24%|##3       | 119/500 [06:45<21:40,  3.41s/it] 24%|##4       | 120/500 [06:48<21:37,  3.41s/it] 24%|##4       | 121/500 [06:52<21:35,  3.42s/it] 24%|##4       | 122/500 [06:55<21:31,  3.42s/it] 25%|##4       | 123/500 [06:59<21:27,  3.42s/it] 25%|##4       | 124/500 [07:02<21:24,  3.42s/it] 25%|##5       | 125/500 [07:05<21:19,  3.41s/it] 25%|##5       | 126/500 [07:09<21:18,  3.42s/it] 25%|##5       | 127/500 [07:12<21:14,  3.42s/it] 26%|##5       | 128/500 [07:16<21:09,  3.41s/it] 26%|##5       | 129/500 [07:19<21:07,  3.42s/it] 26%|##6       | 130/500 [07:22<20:59,  3.40s/it] 26%|##6       | 131/500 [07:26<20:58,  3.41s/it] 26%|##6       | 132/500 [07:29<20:54,  3.41s/it] 27%|##6       | 133/500 [07:33<20:52,  3.41s/it] 27%|##6       | 134/500 [07:36<20:53,  3.42s/it] 27%|##7       | 135/500 [07:40<20:48,  3.42s/it] 27%|##7       | 136/500 [07:43<20:45,  3.42s/it] 27%|##7       | 137/500 [07:46<20:39,  3.41s/it] 28%|##7       | 138/500 [07:50<20:34,  3.41s/it] 28%|##7       | 139/500 [07:53<20:34,  3.42s/it] 28%|##8       | 140/500 [07:57<20:30,  3.42s/it] 28%|##8       | 141/500 [08:00<20:25,  3.41s/it] 28%|##8       | 142/500 [08:03<20:21,  3.41s/it] 29%|##8       | 143/500 [08:07<20:19,  3.41s/it] 29%|##8       | 144/500 [08:10<20:18,  3.42s/it] 29%|##9       | 145/500 [08:14<20:10,  3.41s/it] 29%|##9       | 146/500 [08:17<20:07,  3.41s/it] 29%|##9       | 147/500 [08:21<20:04,  3.41s/it] 30%|##9       | 148/500 [08:24<19:57,  3.40s/it] 30%|##9       | 149/500 [08:27<19:56,  3.41s/it] 30%|###       | 150/500 [08:31<19:53,  3.41s/it] 30%|###       | 151/500 [08:34<19:50,  3.41s/it]                                                 [33mTraceback (Most recent call last):
[31m[1m155[0m train_dcunet.py[0m                                                                      [1m[32m<module>[0m [33m--> [1mtrainer.train(step=args.num_step, validation_interval=args.validation_interval)[0m                       
[31m[1m219[0m /home/azureuser/anaconda3/envs/coco/lib/python3.6/site-packages/PinkBlack/trainer.py[0m [1m[32mtrain[0m    [33m--> [1mself.config[f'{phase}_loss'], self.config[f'{phase}_metric'] = self._train(phase, num_steps=num_steps)[0m
[31m[1m331[0m /home/azureuser/anaconda3/envs/coco/lib/python3.6/site-packages/PinkBlack/trainer.py[0m [1m[32m_train[0m   [33m--> [1mresults = self._step(phase=phase, iterator=step_iterator)[0m                                             
[31m[1m303[0m /home/azureuser/anaconda3/envs/coco/lib/python3.6/site-packages/PinkBlack/trainer.py[0m [1m[32m_step[0m    [33m--> [1mself.optimizer.step()[0m                                                                                 
[31m[1m93[0m  /home/azureuser/anaconda3/envs/coco/lib/python3.6/site-packages/torch/optim/adam.py[0m  [1m[32mstep[0m     [33m--> [1mexp_avg.mul_(beta1).add_(1 - beta1, grad)[0m                                                             
[31m[1mKeyboardInterrupt: 
